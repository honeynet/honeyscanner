{
  "v0.9": {
    "python": [
      {
        "name": "python",
        "installed_version": "2.5.0",
        "affected_versions": "<2.17.14",
        "cve": "CVE-2017-20052",
        "vulnerability_id": "pyup.io-49455",
        "advisory": "A vulnerability classified as problematic was found in Python 2.7.13. This vulnerability affects unknown code of the component pgAdmin4. The manipulation leads to uncontrolled search path. The attack can be initiated remotely. The exploit has been disclosed to the public and may be used.",
        "cvss_score": 7.8
      },
      {
        "name": "python",
        "installed_version": "2.5.0",
        "affected_versions": "<2.5.2",
        "cve": "CVE-2008-1721",
        "vulnerability_id": "pyup.io-45618",
        "advisory": "Integer signedness error in the zlib extension module in Python 2.5.2 and earlier allows remote attackers to execute arbitrary code via a negative signed integer, which triggers insufficient memory allocation and a buffer overflow.",
        "cvss_score": 7.5
      },
      {
        "name": "python",
        "installed_version": "2.5.0",
        "affected_versions": "<2.5.2",
        "cve": "CVE-2008-1887",
        "vulnerability_id": "pyup.io-45643",
        "advisory": "Python 2.5.2 and earlier allows context-dependent attackers to execute arbitrary code via multiple vectors that cause a negative size value to be provided to the PyString_FromStringAndSize function, which allocates less memory than expected when assert() is disabled and triggers a buffer overflow.",
        "cvss_score": 9.3
      },
      {
        "name": "python",
        "installed_version": "2.5.0",
        "affected_versions": "<2.5.3",
        "cve": "CVE-2008-1679",
        "vulnerability_id": "pyup.io-45625",
        "advisory": "Multiple integer overflows in imageop.c in Python before 2.5.3 allow context-dependent attackers to cause a denial of service (crash) and possibly execute arbitrary code via crafted images that trigger heap-based buffer overflows.  NOTE: this issue is due to an incomplete fix for CVE-2007-4965.",
        "cvss_score": 6.8
      },
      {
        "name": "python",
        "installed_version": "2.5.0",
        "affected_versions": "<2.6",
        "cve": "CVE-2010-1450",
        "vulnerability_id": "pyup.io-45624",
        "advisory": "Multiple buffer overflows in the RLE decoder in the rgbimg module in Python 2.5 allow remote attackers to have an unspecified impact via an image file containing crafted data that triggers improper processing within the (1) longimagedata or (2) expandrow function. See CVE-2010-1450.",
        "cvss_score": 7.5
      },
      {
        "name": "python",
        "installed_version": "2.5.0",
        "affected_versions": "<2.6",
        "cve": "CVE-2010-1449",
        "vulnerability_id": "pyup.io-45616",
        "advisory": "Integer overflow in rgbimgmodule.c in the rgbimg module in Python 2.5 allows remote attackers to have an unspecified impact via a large image that triggers a buffer overflow. NOTE: this vulnerability exists because of an incomplete fix for CVE-2008-3143.12.",
        "cvss_score": null
      },
      {
        "name": "python",
        "installed_version": "2.5.0",
        "affected_versions": "<2.6",
        "cve": "CVE-2009-4134",
        "vulnerability_id": "pyup.io-45605",
        "advisory": "Buffer underflow in the rgbimg module in Python 2.5 allows remote attackers to cause a denial of service (application crash) via a large ZSIZE value in a black-and-white (aka B/W) RGB image that triggers an invalid pointer dereference. See CVE-2009-4134.",
        "cvss_score": null
      },
      {
        "name": "python",
        "installed_version": "2.5.0",
        "affected_versions": "<2.6.6",
        "cve": "CVE-2006-4980",
        "vulnerability_id": "pyup.io-54917",
        "advisory": "Python 2.6.6 includes a fix for CVE-2006-4980: Buffer overflow in the repr function in Python 2.3 through 2.6 before 20060822 allows context-dependent attackers to cause a denial of service and possibly execute arbitrary code via crafted wide character UTF-32/UCS-4 strings to certain scripts.",
        "cvss_score": null
      },
      {
        "name": "python",
        "installed_version": "2.5.0",
        "affected_versions": "<2.7.15",
        "cve": "CVE-2018-1000030",
        "vulnerability_id": "pyup.io-45645",
        "advisory": "Python 2.7.15 includes a fix for CVE-2018-1000030: Python 2.7.14 is vulnerable to a Heap-Buffer-Overflow as well as a Heap-Use-After-Free. Python versions prior to 2.7.14 may also be vulnerable and it appears that Python 2.7.17 and prior may also be vulnerable however this has not been confirmed. The vulnerability lies when multiply threads are handling large amounts of data. In both cases there is essentially a race condition that occurs. For the Heap-Buffer-Overflow, Thread 2 is creating the size for a buffer, but Thread1 is already writing to the buffer without knowing how much to write. So when a large amount of data is being processed, it is very easy to cause memory corruption using a Heap-Buffer-Overflow. As for the Use-After-Free, Thread3->Malloc->Thread1->Free's->Thread2-Re-uses-Free'd Memory. The PSRT has stated that this is not a security vulnerability due to the fact that the attacker must be able to run code, however in some situations, such as function as a service, this vulnerability can potentially be used by an attacker to violate a trust boundary, as such the DWF feels this issue deserves a CVE.\r\nhttps://bugs.python.org/issue31530",
        "cvss_score": null
      },
      {
        "name": "python",
        "installed_version": "2.5.0",
        "affected_versions": "<2.7.16",
        "cve": "CVE-2018-1000802",
        "vulnerability_id": "pyup.io-45646",
        "advisory": "Python 2.7.16 includes a fix for CVE-2018-1000802: Python Software Foundation Python (CPython) version 2.7 contains a CWE-77: Improper Neutralization of Special Elements used in a Command ('Command Injection') vulnerability in shutil module (make_archive function) that can result in Denial of service or Information gain via injection of arbitrary files on the system or entire drive. This attack appear to be exploitable via Passage of unfiltered user input to the function.\r\nhttps://bugs.python.org/issue34540",
        "cvss_score": null
      },
      {
        "name": "python",
        "installed_version": "2.5.0",
        "affected_versions": "<2.7.8",
        "cve": "CVE-2014-7185",
        "vulnerability_id": "pyup.io-45648",
        "advisory": "Python 2.7.8 includes a fix for CVE-2014-7185: Integer overflow in bufferobject.c in Python before 2.7.8 allows context-dependent attackers to obtain sensitive information from process memory via a large size and offset in a \"buffer\" function.\r\nhttps://bugs.python.org/issue21831",
        "cvss_score": null
      },
      {
        "name": "python",
        "installed_version": "2.5.0",
        "affected_versions": "<3.11.3",
        "cve": "CVE-2023-27043",
        "vulnerability_id": "pyup.io-55080",
        "advisory": "The e-mail module of Python 0 - 2.7.18, 3.x - 3.11 incorrectly parses e-mail addresses which contain a special character. This vulnerability allows attackers to send messages from e-mail addresses that would otherwise be rejected.\r\nhttps://github.com/python/cpython/issues/102988\r\nhttps://python-security.readthedocs.io/vuln/email-parseaddr-realname.html",
        "cvss_score": null
      },
      {
        "name": "python",
        "installed_version": "2.5.0",
        "affected_versions": "<3.4.0",
        "cve": "CVE-2013-7040",
        "vulnerability_id": "pyup.io-45657",
        "advisory": "Python version 3.4 includes a fix for CVE-2013-7040: Python before 3.4 only uses the last eight bits of the prefix to randomize hash values, which causes it to compute hash values without restricting the ability to trigger hash collisions predictably and makes it easier for context-dependent attackers to cause a denial of service (CPU consumption) via crafted input to an application that maintains a hash table.  NOTE: this vulnerability exists because of an incomplete fix for CVE-2012-1150.\r\nhttps://bugs.python.org/issue14621",
        "cvss_score": null
      },
      {
        "name": "python",
        "installed_version": "2.5.0",
        "affected_versions": "<=3.11.4",
        "cve": "CVE-2023-36632",
        "vulnerability_id": "pyup.io-59194",
        "advisory": "** DISPUTED ** The legacy email.utils.parseaddr function in Python through 3.11.4 allows attackers to trigger \"RecursionError: maximum recursion depth exceeded while calling a Python object\" via a crafted argument. This argument is plausibly an untrusted value from an application's input data that was supposed to contain a name and an e-mail address. NOTE: email.utils.parseaddr is categorized as a Legacy API in the documentation of the Python email package. Applications should instead use the email.parser.BytesParser or email.parser.Parser class. NOTE: the vendor's perspective is that this is neither a vulnerability nor a bug. The email package is intended to have size limits and to throw an exception when limits are exceeded; they were exceeded by the example demonstration code.",
        "cvss_score": null
      },
      {
        "name": "python",
        "installed_version": "2.5.0",
        "affected_versions": ">0",
        "cve": "PVE-2021-42393",
        "vulnerability_id": "pyup.io-45612",
        "advisory": "In difflib module, table header in output of difflib.HtmlDiff.make_table is not escaped and can be rendered as code in the browser, leading potentially to XSS.\r\nhttps://bugs.python.org/issue35603\r\nhttps://github.com/python/cpython/commit/44e36e80456dabaeb59c6e2a93e0c1322bfeb179",
        "cvss_score": null
      },
      {
        "name": "python",
        "installed_version": "2.5.0",
        "affected_versions": ">0",
        "cve": "CVE-2019-9674",
        "vulnerability_id": "pyup.io-45621",
        "advisory": "Lib/zipfile.py in Python allows remote attackers to cause a denial of service (resource consumption) via a ZIP bomb.\r\nhttps://bugs.python.org/issue36260",
        "cvss_score": null
      }
    ],
    "twisted": [
      {
        "name": "twisted",
        "installed_version": "14.0.0",
        "affected_versions": "<16.4.0",
        "cve": "CVE-2016-1000111",
        "vulnerability_id": "pyup.io-38551",
        "advisory": "Twisted Web 16.4.0 includes the following three security fixes:\r\n- A bug in twisted.web.server.Site.makeSession which may lead to predictable session IDs was fixed.  Session IDs are now generated securely using `os.urandom`.\r\n- twisted.web.server.Request.getSession will now, for a request sent over HTTPS, set a \"Secure\" cookie, preventing the secure session from being sent over plain-text HTTP. \r\n- twisted.web.twcgi.CGIScript will now not pass the \"Proxy\" header to CGI scripts, as a mitigation to CVE-2016-1000111.",
        "cvss_score": null
      },
      {
        "name": "twisted",
        "installed_version": "14.0.0",
        "affected_versions": "<17.1.0",
        "cve": "PVE-2021-34914",
        "vulnerability_id": "pyup.io-34914",
        "advisory": "In twisted Core 17.1.0, twisted.internet.ssl.CertificateOptions has the new constructor argument 'raiseMinimumTo', allowing you to increase the minimum TLS version to this version or Twisted's default, whichever is higher. The additional new constructor arguments 'lowerMaximumSecurityTo' and 'insecurelyLowerMinimumTo' allow finer grained control over negotiated versions that don't honour Twisted's defaults, for working around broken peers, at the cost of reducing the security of the TLS it will negotiate. (#6800)",
        "cvss_score": null
      },
      {
        "name": "twisted",
        "installed_version": "14.0.0",
        "affected_versions": "<19.10.0",
        "cve": "CVE-2019-9512",
        "vulnerability_id": "pyup.io-55098",
        "advisory": "Twisted 19.10.0 includes security fixes to HTTP/2 DoS Attacks: Ping, Reset, and Settings Floods.\r\nhttps://github.com/advisories/GHSA-32gv-6cf3-wcmq",
        "cvss_score": null
      },
      {
        "name": "twisted",
        "installed_version": "14.0.0",
        "affected_versions": "<19.10.0",
        "cve": "CVE-2019-9514",
        "vulnerability_id": "pyup.io-55099",
        "advisory": "Twisted 19.10.0 includes security fixes to HTTP/2 DoS Attacks: Ping, Reset, and Settings Floods.\r\nhttps://github.com/advisories/GHSA-32gv-6cf3-wcmq",
        "cvss_score": null
      },
      {
        "name": "twisted",
        "installed_version": "14.0.0",
        "affected_versions": "<19.10.0",
        "cve": "CVE-2019-9515",
        "vulnerability_id": "pyup.io-55100",
        "advisory": "Twisted 19.10.0 includes security fixes to HTTP/2 DoS Attacks: Ping, Reset, and Settings Floods.\r\nhttps://github.com/advisories/GHSA-32gv-6cf3-wcmq",
        "cvss_score": null
      },
      {
        "name": "twisted",
        "installed_version": "14.0.0",
        "affected_versions": "<19.2.0",
        "cve": "PVE-2021-37040",
        "vulnerability_id": "pyup.io-37040",
        "advisory": "Before twisted 19.2.0, the twisted.web.client.Request and twisted.web.client.HTTPClient were both vulnerable to header injection attacks.  They now replace linear whitespace ('\\r', '\\n', and '\\r\\n') with a single space. (#9421)",
        "cvss_score": null
      },
      {
        "name": "twisted",
        "installed_version": "14.0.0",
        "affected_versions": "<19.2.1",
        "cve": "CVE-2019-12387",
        "vulnerability_id": "pyup.io-37209",
        "advisory": "In Twisted before 19.2.1, twisted.web did not validate or sanitize URIs or HTTP methods, allowing an attacker to inject invalid characters such as CRLF.",
        "cvss_score": null
      },
      {
        "name": "twisted",
        "installed_version": "14.0.0",
        "affected_versions": "<19.7.0",
        "cve": "CVE-2019-12855",
        "vulnerability_id": "pyup.io-37554",
        "advisory": "In twisted 19.7.0, twisted.words.protocols.jabber.xmlstream.TLSInitiatingInitializer properly verifies the server's certificate against platform CAs and the stream's domain, mitigating CVE-2019-12855. (#9561)",
        "cvss_score": null
      },
      {
        "name": "twisted",
        "installed_version": "14.0.0",
        "affected_versions": "<20.3.0",
        "cve": "CVE-2020-10108",
        "vulnerability_id": "pyup.io-38085",
        "advisory": "Twisted 20.3.0 includes a fix for CVE-2020-10108: In Twisted Web through 19.10.0, there was an HTTP request splitting vulnerability. When presented with two content-length headers, it ignored the first header. When the second content-length value was set to zero, the request body was interpreted as a pipelined request.",
        "cvss_score": null
      },
      {
        "name": "twisted",
        "installed_version": "14.0.0",
        "affected_versions": "<22.4.0rc1",
        "cve": "CVE-2022-24801",
        "vulnerability_id": "pyup.io-47974",
        "advisory": "Twisted 22.4.0rc1 includes a fix for CVE-2022-24801: Prior to version 22.4.0rc1, the Twisted Web HTTP 1.1 server, located in the 'twisted.web.http' module, parsed several HTTP request constructs more leniently than permitted by RFC 7230. This non-conformant parsing can lead to desync if requests pass through multiple HTTP parsers, potentially resulting in HTTP request smuggling. Users who may be affected use Twisted Web's HTTP 1.1 server and/or proxy and also pass requests through a different HTTP server and/or proxy. The Twisted Web client is not affected. The HTTP 2.0 server uses a different parser, so it is not affected. Two workarounds are available: Ensure any vulnerabilities in upstream proxies have been addressed, such as by upgrading them; or filtering malformed requests by other means, such as configurating an upstream proxy.\r\nhttps://github.com/twisted/twisted/security/advisories/GHSA-c2jg-hw38-jrqq",
        "cvss_score": null
      },
      {
        "name": "twisted",
        "installed_version": "14.0.0",
        "affected_versions": "<=19.10.0",
        "cve": "CVE-2020-10109",
        "vulnerability_id": "pyup.io-39557",
        "advisory": "Twisted 20.3.0 includes a fix for CVE-2020-10109: In Twisted Web through 19.10.0, there was an HTTP request splitting vulnerability. When presented with a content-length and a chunked encoding header, the content-length took precedence and the remainder of the request body was interpreted as a pipelined request.",
        "cvss_score": null
      },
      {
        "name": "twisted",
        "installed_version": "14.0.0",
        "affected_versions": "==14.0",
        "cve": "CVE-2014-7143",
        "vulnerability_id": "pyup.io-37757",
        "advisory": "Twisted 14.0 trustRoot is not respected in HTTP client.\r\nhttps://bugzilla.redhat.com/show_bug.cgi?id=CVE-2014-7143",
        "cvss_score": null
      },
      {
        "name": "twisted",
        "installed_version": "14.0.0",
        "affected_versions": ">= 11.1,<22.1",
        "cve": "CVE-2022-21712",
        "vulnerability_id": "pyup.io-44844",
        "advisory": "Twisted 22.1 includes a fix for CVE-2022-21712: In affected versions, twisted exposes cookies and authorization headers when following cross-origin redirects. This issue is present in the 'twisted.web.RedirectAgent' and 'twisted.web. BrowserLikeRedirectAgent' functions. There are no known workarounds.\r\nhttps://github.com/twisted/twisted/security/advisories/GHSA-92x2-jw7w-xvvx",
        "cvss_score": null
      },
      {
        "name": "twisted",
        "installed_version": "14.0.0",
        "affected_versions": ">=0.9.4,<22.10.0rc1",
        "cve": "CVE-2022-39348",
        "vulnerability_id": "pyup.io-51619",
        "advisory": "Twisted 22.10.0rc1 includes a fix for CVE-2022-39348: NameVirtualHost Host header injection.\r\nhttps://github.com/twisted/twisted/security/advisories/GHSA-vg46-2rrj-3647",
        "cvss_score": null
      }
    ],
    "pycrypto": [
      {
        "name": "pycrypto",
        "installed_version": "2.6",
        "affected_versions": "<2.6.1",
        "cve": "CVE-2018-6594",
        "vulnerability_id": "pyup.io-35765",
        "advisory": "lib/Crypto/PublicKey/ElGamal.py in PyCrypto through 2.6.1 generates weak ElGamal key parameters, which allows attackers to obtain sensitive information by reading ciphertext data (i.e., it does not have semantic security in face of a ciphertext-only attack). The Decisional Diffie-Hellman (DDH) assumption does not hold for PyCrypto's ElGamal implementation.",
        "cvss_score": null
      },
      {
        "name": "pycrypto",
        "installed_version": "2.6",
        "affected_versions": "<2.6.1",
        "cve": "CVE-2013-1445",
        "vulnerability_id": "pyup.io-33150",
        "advisory": "The Crypto.Random.atfork function in PyCrypto before 2.6.1 does not properly reseed the pseudo-random number generator (PRNG) before allowing a child process to access it, which makes it easier for context-dependent attackers to obtain sensitive information by leveraging a race condition in which a child process is created and accesses the PRNG within the same rate-limit period as another process.",
        "cvss_score": null
      },
      {
        "name": "pycrypto",
        "installed_version": "2.6",
        "affected_versions": "<=2.6.1",
        "cve": "CVE-2013-7459",
        "vulnerability_id": "pyup.io-35015",
        "advisory": "Heap-based buffer overflow in the ALGnew function in block_templace.c in Python Cryptography Toolkit (aka pycrypto) 2.6.1 allows remote attackers to execute arbitrary code as demonstrated by a crafted iv parameter to cryptmsg.py.",
        "cvss_score": null
      }
    ]
  }
}